'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("./application/config");
const logging_1 = require("./application/logging");
const application_1 = require("./application");
const filesystem_utils_1 = require("./application/filesystem-utils");
// TODO express.Router({ caseSensitive: true })
// TODO CodeStyle (Spaces instead of Tabs)
class Buzzy {
    constructor(config) {
        this.config = config_1.parseConfig(config);
        const shouldLog = this.config.server.logging;
        const logService = new logging_1.LoggingService(this.config.loggingActive);
        this.logging = logService.create('server', shouldLog);
        const fileUtils = new filesystem_utils_1.FileUtils(logService.create('filesystem', shouldLog), this.config.rootPath);
        this.app = new application_1.Application(this.config, logService, fileUtils);
    }
    start() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.app.start();
                this.logging.info('Application started successfully');
            }
            catch (err) {
                this.logging.error('Application start failed', err);
            }
        });
    }
    stop() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.app.stop();
                this.logging.info('Application stopped successfully');
            }
            catch (err) {
                this.logging.error('Application stop failed', err);
            }
        });
    }
}
exports.default = Buzzy;
module.exports = Buzzy;
module.exports.default = Buzzy;
var public_1 = require("./public");
Object.defineProperty(exports, "DefaultConfig", { enumerable: true, get: function () { return public_1.DefaultConfig; } });
Object.defineProperty(exports, "DefaultMethod", { enumerable: true, get: function () { return public_1.DefaultMethod; } });
