export declare const isDefined: (a?: any) => boolean;
export declare const isInteger: (number: unknown) => boolean;
export declare const isArray: (arg: any) => arg is any[];
export declare const isFunction: (functionToCheck: any) => boolean;
export declare const isAsyncFunction: (functionToCheck: any) => boolean;
export declare const isPromise: (p?: any) => boolean;
export declare const hasKeys: (v: any) => boolean;
export declare const xor: (a: boolean, b: boolean) => boolean;
export declare const jsonStringify: (obj: any, newLine?: boolean) => string;
export declare const parseJson: (raw: string) => any;
export declare const parseYaml: (raw: string) => any;
export declare const now: () => string;
export declare class CollisionCheck<T> {
    private list;
    constructor();
    /**
     *
     * @param element element to verify, if it's already included
     * @returns true, if element is a new one
     */
    verify(element: T): boolean;
}
export declare class PaddedCounter {
    private start;
    private end?;
    private originalStart;
    private maxLength;
    constructor(start: number, end?: number);
    private length;
    private inc;
    private padding;
    next(): string;
    getMaxLength(): number;
}
export declare const replaceAt: (str: string, index: number, replacement: string) => string;
