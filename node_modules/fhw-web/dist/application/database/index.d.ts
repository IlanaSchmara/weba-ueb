import { DatabaseConfig } from '../../public/config';
import { Database as IDatabase } from '../../public/database';
import { LoggingService } from '../logging';
import { FileUtils } from '../filesystem-utils';
import { GlobalData } from '../../public/global';
import { Frontmatter } from '../../public/frontmatter';
export declare class DatabaseService {
    private config;
    private logService;
    private fileUtils;
    private globalDataService;
    private fileDataService;
    private sqlDataService;
    private database;
    constructor(config: DatabaseConfig, logService: LoggingService, fileUtils: FileUtils);
    build(): Promise<DatabaseService>;
    reload(): Promise<void>;
    getGlobalData(): Promise<GlobalData>;
    getDatabase(frontmatter: Frontmatter): Promise<IDatabase>;
    parseAndExecuteSql(obj: Record<string, any>, params: Record<string, any>): Promise<Record<string, any>>;
    save(): Promise<void>;
}
