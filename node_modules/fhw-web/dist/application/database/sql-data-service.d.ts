import { SqlDataConfig } from '../../public/config/database-config';
import { Logging } from '../logging';
import { FileUtils } from '../filesystem-utils';
declare type SqlResult = Record<string, any>[];
export declare class SqlDataService {
    private config;
    private logging;
    private fileUtils;
    private sqliteDatabase;
    constructor(config: SqlDataConfig, logging: Logging, fileUtils: FileUtils);
    private _build;
    build(): Promise<SqlDataService>;
    reload(): Promise<void>;
    private flattenParams;
    private prepareSql;
    private convertSqlResult;
    private _executeSql;
    query(sql: string, params: Record<string, any>): Promise<SqlResult>;
    parseAndExecuteSql(obj: Record<string, any>, params: Record<string, any>): Promise<Record<string, any>>;
    save(): Promise<void>;
}
export {};
