'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalDataService = void 0;
class GlobalDataService {
    constructor(config, logging, fileUtils, sqlDataService) {
        this.config = config;
        this.logging = logging;
        this.fileUtils = fileUtils;
        this.sqlDataService = sqlDataService;
        this.config.pathToFile = `${this.fileUtils.parseFilename(this.config.pathToFile)}.${this.config.format}`;
    }
    _build() {
        return __awaiter(this, void 0, void 0, function* () {
            const fileExists = yield this.fileUtils.exist(this.config.pathToFile);
            this.data = fileExists
                ? yield this.fileUtils.readJson(this.config.pathToFile)
                : {};
            this.data = this.sqlDataService.parseAndExecuteSql(this.data, {});
        });
    }
    build() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.config.active) {
                yield this._build();
            }
            return this;
        });
    }
    reload() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.config.reloadOnEveryRequest) {
                yield this._build();
            }
        });
    }
    getData() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.reload();
            return this.data;
        });
    }
}
exports.GlobalDataService = GlobalDataService;
