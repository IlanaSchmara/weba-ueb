import { SessionsConfig } from '../../public/config';
import { Session as ISession, SessionData, SessionMeta } from '../../public/session';
import { Request as ExpRequest, Response as ExpResponse } from 'express';
import { FileUtils } from '../filesystem-utils/file';
import { Logging } from '../logging';
import { RequestData } from '../../public/request';
export declare class EmptySession implements ISession {
    constructor();
    getId(): string;
    getMeta(): SessionMeta;
    getData(): SessionData;
    save(_data: Record<string, any>): void;
}
export declare class SessionService {
    private config;
    private logging;
    private fileUtils;
    private req;
    private res;
    private session;
    constructor(config: SessionsConfig, logging: Logging, fileUtils: FileUtils, req: ExpRequest, res: ExpResponse);
    private prepare;
    private writeSession;
    private readSession;
    private initSession;
    private openSession;
    closeSession(request: RequestData): Promise<void>;
    getSession(url: string): Promise<ISession>;
}
