import { FileUtils } from '../filesystem-utils';
import { TemplatingConfig } from '../../public/config';
import { Frontmatter } from '../../public/frontmatter';
import { DatabaseService } from '../database';
export declare enum TemplateType {
    PAGE = 0,
    TEMPLATE = 1
}
export declare class TemplateFileService {
    private config;
    private fileUtils;
    private databaseService;
    constructor(config: TemplatingConfig, fileUtils: FileUtils, databaseService: DatabaseService);
    private findExtension;
    private readFile;
    build(filepath: string, type: TemplateType, parentFrontmatter: Frontmatter): Promise<TemplateFile>;
    from(fileContent: string, parentFrontmatter: Frontmatter): Promise<TemplateFile>;
}
export declare class TemplateFile {
    private name;
    private databaseService;
    private file;
    private parentFrontmatter;
    private frontmatter;
    private markup;
    constructor(name: string, databaseService: DatabaseService, file: string);
    private validateFrontmatterType;
    private transformFrontmatter;
    build(parentFrontmatter: Frontmatter): Promise<TemplateFile>;
    getFrontmatter(): Frontmatter;
    getMarkup(): string;
    getName(): string;
}
