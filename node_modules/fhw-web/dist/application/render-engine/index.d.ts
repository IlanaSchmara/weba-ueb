import { TemplatingConfig } from '../../public/config';
import { Frontmatter } from '../../public/frontmatter';
import { Logging } from '../logging';
import { FileUtils } from '../filesystem-utils';
import { Validation } from '../validator';
import { DatabaseService } from '../database';
export declare class RenderEngine {
    private config;
    private logging;
    private fileUtils;
    private databaseService;
    private hbs;
    private helpers;
    private templateFileService;
    constructor(config: TemplatingConfig, logging: Logging, fileUtils: FileUtils, databaseService: DatabaseService);
    build(): Promise<RenderEngine>;
    reloadRenderer(): Promise<void>;
    private _render;
    private _renderTemplate;
    renderTemplate(filePath: string, frontmatter: Frontmatter): Promise<string>;
    renderPage(filePath: string, frontmatter: Frontmatter): Promise<string>;
    private injectErrorHtml;
    private renderError;
    renderAnyError(error: Error, html?: string): Promise<string>;
    renderValidationError(validation: Validation, html: string): Promise<string>;
}
